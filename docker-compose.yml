version: "3.3"

services: 
  a-registro-authenticacion:
    restart: always 
    build: .
    labels: 
      - "traefik.http.routers.a-informacion.rule=Host(`a-registro-authenticacion.restoner-api.fun`)"
    networks:
      - backend
    links:
      - redis
      - postgres
  redis:
    container_name: redis_db
    restart: always
    image: "redis:6.0.16"
    networks:
      - backend
    ports: 
      - "6000:6379"
  postgres:
    container_name: postgres_db
    restart: always
    image: "postgres:13"
    networks:
      - backend
    ports:
      - "7000:5432"
    environment:
      - DATABASE_HOST=127.0.0.1
      - POSTGRES_USER=postgresx
      - POSTGRES_PASSWORD=adsfg465WFVFGdsrf3465QWFDSFGH4fsadf4fwedf
      - POSTGRES_DB=postgresx
  pgadmin:
    restart: always
    image: "dpage/pgadmin4"
    networks:
      - backend
    ports:
      - "90:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: adminx@adminx.com
      PGADMIN_DEFAULT_PASSWORD: dsgojq02934jMG4GG436gdgfG346FD
    depends_on:
      - postgres
  traefik: # apache.app.test - nginx.app.test
    image: traefik:v2.3.6
    ports: 
      - 80:80
      - 443:443
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/traefik.yml
      - ./acme.json:/acme.json
    networks: 
      backend:

networks:
  backend:
    driver: bridge
    ipam: 
      driver: default 








